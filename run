#! /usr/bin/env zsh
# dk@hyve.org

# settings
BASE="ssh://git.hyve.org:119"



function bvs_clean {
echo ">>> make clean"
[ -r Makefile ] && make clean

DIRS="./"
[ -r bvsd ] && DIRS+=" bvsd/"
[ -r libbvs ] && DIRS+=" libbvs/"
[ -r modules ] && DIRS+=" modules/"
for i in `ls -d modules/*/`
do
    [ $i != "modules/CMakeFiles/" ] && DIRS+=" $i"
done

echo ">>> cmake cleanup: $DIRS"
[ -r CMakeCache.txt ] && rm CMakeCache.txt
eval "DIRS=($DIRS)"
for i in $DIRS
do
    [ -r $i/Makefile ] && rm $i/Makefile
    [ -r $i/cmake_install.cmake ] && rm $i/cmake_install.cmake
    [ -r $i/CMakeFiles ] && rm -r $i/CMakeFiles
done

[ ! -r libbvs ] && return
echo ">>> documentation cleanup"
for i in $DIRS
do
    [ -r $i/doc ] && rm -r $i/doc
done
}



function bvs_help {
cat << EOF
usage: $0 [command [\$arg]]

maintenance:
  clean             run make clean and remove all CMake generated content
  help              displays this text
  new-module \$arg  creates new module blank/frame with given name
  setup             this adds libbvs and bvsd

targets:
  run (default)         runs the system
  debug                 runs bvsd in gdb session
EOF
}



function bvs_new_module {
[ -z $1 ] && echo "No module name given!" && exit 1
ORIG=BVSExampleModule
ORIGC=`echo $ORIG | tr "[:lower:]" "[:upper:]"`
MOD=$1
MODC=`echo $MOD | tr "[:lower:]" "[:upper:]"`
cp -r libbvs/module modules/$MOD
cd modules/$MOD
mv $ORIG.h $MOD.h
mv $ORIG.cc $MOD.cc
FILES="CMakeLists.txt $MOD.h $MOD.cc"
sed -i '' -e "s/$ORIG/$MOD/g" $FILES
sed -i '' -e "s/$ORIGC/$MODC/g" $FILES
cd ../..
echo "#add_subdirectory($MOD)" >> modules/CMakeLists.txt
echo "Created $MOD, uncomment add_subdirectory($MOD) in modules/CMakeLists.txt to add it to compilation!"
}



function bvs_setup {
#TODO copy BVSExampleConfig to BVSConfig.txt
mkdir bin
#TODO symlink BVSConfig.txt to bin
git submodule update --init --recursive
git submodule foreach git checkout master
}



function bvs_run {
[ -n $GDB -a -r /usr/local/bin/gdb ] && GDB="/usr/local/bin/gdb"
[ ! -r bin/bvsd ] && echo "bvsd executable not found, run make first..." && exit
[ $# != 0 ] && (cd bin && $GDB $GDBOPTS ./bvsd "$@") || (cd bin && $GDB $GDBOPTS ./bvsd --bvs.config=BVSConfig.txt)
}



case $1 in
    clean) bvs_clean;;
    debug) GDB="gdb"; GDBOPTS="--args"; bvs_run;;
    help|--help|-h|-?) bvs_help;;
    new-module) bvs_new_module $2;;
    setup) bvs_setup;;
    ""|*) bvs_run "$@";;
esac
